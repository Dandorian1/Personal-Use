name: publish

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
      version: ${{ steps.changelog.outputs.version }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install front-end dependencies
        run: bun install

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5.2.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-user-name: "MangaYouKnow Bot"
          git-user-email: "admin@myk.com"
          config-file-path: ./.github/.config.cjs
          version-file: "./src-tauri/tauri.conf.json"
          skip-version-file: false
          skip-git-pull: true
          pre-release: false

      - run: |
          rm -rf node_modules
          rm package.json
  release:
    name: Release
    needs: changelog
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # Arm based macs
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # Intel based macs
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Fix Python dependencies (MacOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install python@3.11
          echo 'export PATH="/opt/homebrew/opt/python@3.11/libexec/bin:$PATH"' >> $GITHUB_ENV

      - name: Install front-end dependencies
        run: bun install

      - name: Publish Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: v__VERSION__
          appVersion: __VERSION__
          releaseBody: ${{ needs.changelog.outputs.changelog }}
          includeUpdaterJson: true
          args: ${{ matrix.args }}

      - name: Update Cargo.toml
        run: bash myk u ${{ needs.changelog.outputs.version }}

name: publish

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.txt"

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  changelog:
    name: Generate Changelog
    if: |
      contains(github.event.head_commit.message, 'feat') ||
      contains(github.event.head_commit.message, 'fix')
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
      version: ${{ steps.changelog.outputs.version }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: Install front-end dependencies
        run: bun install

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-user-name: "manga-you-know[bot]"
          git-user-email: "admin@myk.com"
          config-file-path: ./.github/.config.cjs
          version-file: "./src-tauri/tauri.conf.json"
          skip-version-file: false
          skip-git-pull: true
          skip-tag: false
          skip-commit: false
          skip-bump: true
          git-push: false
          pre-release: false
          preset: conventionalcommits

      - run: |
          rm -rf node_modules
          rm package.json
  release:
    name: Release
    needs: changelog
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # Arm based macs
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # Intel based macs
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Fix Python dependencies (MacOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install python@3.11
          brew install python-setuptools
          echo 'export PATH="/opt/homebrew/opt/python@3.11/libexec/bin:$PATH"' >> $GITHUB_ENV

      - name: Install front-end dependencies
        run: bun install

      - name: Set env consts
        run: bun create-env
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Publish Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: v__VERSION__
          appVersion: __VERSION__
          releaseBody: ${{ needs.changelog.outputs.changelog }}
          includeUpdaterJson: true
          args: ${{ matrix.args }}

  release-android:
    name: Release (android-universal)
    needs: changelog
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: Setting variables
        uses: actions/github-script@v6
        id: var
        with:
          script: |
            core.setOutput('version', '${{ needs.changelog.outputs.tag }}'.toLowerCase().replaceAll('v', ''));

      - name: Update Cargo.toml
        id: update-version
        run: /
          echo ${{ needs.changelog.outputs.version }}
          bash myk u ${{ needs.changelog.outputs.version }}

      - name: Commit files
        run: |
          git config --local user.email "admin@myk.com"
          git config --local user.name "manga-you-know[bot]"
          git commit -a -m "Bump tauri.conf.json and Cargo.toml to ${{ needs.changelog.outputs.tag }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install NDK
        run: sdkmanager "ndk;27.0.11902837"

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

      - name: Install dependencies
        run: bun install

      - name: Set env consts
        run: bun create-env
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Build app bundle
        run: bun tauri android build -v
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837

      - name: Extract android signing key from env
        run: |
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" > src-tauri/gen/android/release.jks.base64
          base64 -d src-tauri/gen/android/release.jks.base64 > src-tauri/gen/android/release.decrypted.jks

      - name: Sign APK
        run: |
          ${{ env.ANDROID_HOME }}/build-tools/34.0.0/apksigner sign --ks src-tauri/gen/android/release.decrypted.jks \
            --ks-key-alias ${{ secrets.ANDROID_RELEASE_KEY }} \
            --ks-pass pass:${{ secrets.ANDROID_RELEASE_PASSWORD }} \
            --key-pass pass:${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }} \
            --out src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk \
            src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk

      - name: Get Node project version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Rename APK file
        run: |
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/MangaYouKnow-${{ needs.changelog.outputs.version }}.apk

      - name: Upload APK to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: |
            ./src-tauri/gen/android/app/build/outputs/apk/universal/release/MangaYouKnow-${{ needs.changelog.outputs.version }}.apk
          tag: ${{ needs.changelog.outputs.tag }}
          overwrite: true

      # - name: Publish
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     draft: true
      #     name: App v${{ steps.changelog.outputs.version}}
      #     tag_name: v${{ steps.changelog.outputs.version}}
      #     generate_release_notes: true
      #     files: |
      #       ./src-tauri/gen/android/app/build/outputs/apk/universal/release/MangaYouKnow-${{ steps.changelog.outputs.version}}.apk

  release-ios:
    name: Release (ios)
    needs: changelog
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim

      - name: Install dependencies
        run: bun install

      - name: Set env consts
        run: bun create-env
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Build app bundle
        run: bun tauri ios build -v
